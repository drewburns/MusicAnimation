//
//  PlayingController.swift
//  MusicAnimation
//
//  Created by Andrew Burns on 12/16/15.
//  Copyright Â© 2015 Andrew Burns. All rights reserved.
//

import UIKit
import AVFoundation

class PlayingController: UIViewController, UIDynamicAnimatorDelegate, AVAudioPlayerDelegate
{
    // MARK: - Outlets
    

    @IBOutlet weak var gameView: UIView!
    
    var audioPlayer = AVAudioPlayer()
    
    // MARK: - Animation
    
    var push: UIPushBehavior?
    var animtor: UIDynamicAnimator?
    
    func setSessionPlayerOn()
    {
        do {
            try AVAudioSession.sharedInstance().setCategory(AVAudioSessionCategoryPlayAndRecord)
        } catch _ {
        }
        do {
            try AVAudioSession.sharedInstance().setActive(true)
        } catch _ {
        }
        do {
            try AVAudioSession.sharedInstance().overrideOutputAudioPort(AVAudioSessionPortOverride.Speaker)
        } catch _ {
        }
    }

    
    // MARK: - View Controller Lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
//        setSessionPlayerOn()
        
//        renderCallback(UnsafeMutablePointer<AudioBufferList>)

        
//        update()
        
//        Single Block :
//        var frame = CGRect(origin: CGPointZero, size: dropSize)
//        frame.origin.x = self.view.bounds.width/2 - (frame.size.height/2)
//        frame.origin.y = self.view.bounds.height/2 - (frame.size.width/2)
////
//        let dropView = UIView(frame: frame)
//        dropView.backgroundColor = UIColor.random
////        newView = dropView
//        self.view.addSubview(dropView)

        
//        let _ = NSTimer.scheduledTimerWithTimeInterval(0.25, target: self, selector: "update", userInfo: nil, repeats: true)
        let song = NSURL(fileURLWithPath: NSBundle.mainBundle().pathForResource("starwars", ofType: "wav")!)

        do {
            audioPlayer = try AVAudioPlayer(contentsOfURL: song)
            audioPlayer.delegate = self
            audioPlayer.prepareToPlay()
            print(audioPlayer.channelAssignments)
            audioPlayer.play()
        } catch {
            
        }

    }
    

    
    

    
    var newViews = [UIView]()
    func update() {
        for view in newViews {
            UIView.animateWithDuration(Double(CGFloat(Float(arc4random()) / Float(UINT32_MAX))), delay: 0, options: UIViewAnimationOptions.CurveEaseOut, animations: {
                    view.alpha = 0.0
                }, completion: { (Bool) -> Void in
                view.removeFromSuperview()
            })
    
        }
        newViews.removeAll()

        let array_value = values_array[timesTimerHasGone] * 10
        makeRow()
        self.animtor = UIDynamicAnimator(referenceView: self.view)
        self.push = UIPushBehavior(items: newViews, mode: UIPushBehaviorMode.Instantaneous);
        self.animtor!.addBehavior(self.push!);
        push!.active = false
        push!.setAngle(  CGFloat(M_PI / -2) , magnitude: CGFloat(array_value))
        push!.active = true
//        newView.setHeight(value)
        timesTimerHasGone += 1
    }
    
    func makeRow(){
        for (var i = 0; i < dropsPerRow; i++) {
            var frame = CGRect(origin: CGPointZero, size: dropSize)
            frame.origin.x = (CGFloat(newViews.count) * dropSize.width)
            frame.origin.y = gameView.bounds.height
            let dropView = UIView(frame: frame)
            dropView.backgroundColor = UIColor.random
            newViews.append(dropView)
            self.view.addSubview(dropView)
        }
    }
    func randomAngle() -> CGFloat {
        switch arc4random()%5 {
        case 0: return CGFloat(M_PI / -2.1)
        case 1: return CGFloat(M_PI / -2.2)
        case 2: return CGFloat(M_PI / -2.3)
        case 3: return CGFloat(M_PI / -1.9)
        case 4: return CGFloat(M_PI / -1.8)
        default: return CGFloat(M_PI / -2)
        }
    }
    
//    func makeRow() -> [UIView] {
//        print()gameView.bounds
//    }
    
    var timesTimerHasGone = 0
    
    let values_array = [0.00002511209743589017, 0.019746608446973346, 0.07579144319215661, 0.07843670221415575, 0.076663795884975, 0.03651551112232592, 0.05559384937448984, 0.07194505757609146, 0.07536004819131344, 0.035244035781370454, 0.05972272602028019, 0.06941266875506615, 0.05562645386118606, 0.13573967712059137, 0.06292893167374983, 0.054904646434953464, 0.05445899458258463, 0.051814042784526344, 0.05621045335935374, 0.07669271921994746, 0.11537189507860682, 0.07133408603014324, 0.036032967487005144, 0.07413869463724945, 0.09960388095024686, 0.07398562792012205, 0.03100504011115772, 0.06279620539573366, 0.09282844165654618, 0.05971821730136439, 0.07546153726755934, 0.05981306646559127, 0.05632209466456416, 0.05664685251231464, 0.057103401127342475, 0.06267617770727286, 0.07468288234113545, 0.11135110036876615, 0.09661633017360245, 0.08813396296785722, 0.07612495553832986, 0.08791104847260878, 0.09373638527418857, 0.053595091932031394, 0.05025821092793454, 0.08693219978364349, 0.08170609359146137, 0.06261414614905253, 0.08297051662069342, 0.037420307770411984, 0.057973035857008436, 0.05717860733383735, 0.07052872199534764, 0.06783768937394426, 0.06804713306811032, 0.08537735049010577, 0.10687914038232077, 0.11442869267013055, 0.10984436068369649, 0.06545375060758378, 0.0465676349021985, 0.083872506736563, 0.08365032847165932, 0.10125259961274062, 0.0998554115565269, 0.11983382461855076, 0.12005416230759257, 0.10637026405715043, 0.05721025970309524, 0.0636191282474733, 0.07238254446786997, 0.0976611932608862, 0.10127327218584199, 0.09650391388908178, 0.11190860941343897, 0.13884105298343122, 0.16888134349350398, 0.054298250034719074, 0.02901587857323032, 0.018223361702595003, 0.03027879316059059, 0.0450140034332912, 0.06170926093190243, 0.07333692041733035, 0.03128359258531681, 0.04474560042031335, 0.08090726429292128, 0.04585165642749241, 0.07735459029988068, 0.049860879035560836, 0.054009404174649694, 0.09093430365319047, 0.05818983631905553, 0.03311600348660977, 0.05989542739178986, 0.07208992611922954, 0.10559541206491332, 0.07337726362599623, 0.05195703753840355, 0.07146304258737161, 0.0654963827729982, 0.04817757138577992, 0.053217267376010395, 0.06432610865883055, 0.04081076475489751, 0.06904628898278785, 0.05309660309740188, 0.047109746768646266, 0.08814839695751094, 0.09002584246008015, 0.06839370381566157, 0.056136478816405544, 0.07318523482404515, 0.0818276490962767, 0.051746461820887844, 0.05218561215040019, 0.07039395862885878, 0.06063940476186259, 0.034909244719335264, 0.05973023224845677, 0.06106038182654918, 0.04954876718948395, 0.06417714656426429, 0.072765530939654, 0.09717743733650151, 0.10152946927468313, 0.09968945250501655, 0.07591560594879433, 0.06990446508979486, 0.08374652554632941, 0.08749210019304514, 0.05820619945363516, 0.058910877069327613, 0.07298371806110981, 0.057957658053266144, 0.033430849902538605, 0.05496174857120386, 0.057343954705249243, 0.05354710133824313, 0.08217552900530564, 0.07854859261985875, 0.06542707748039435, 0.06682993949227253, 0.07381433811807035, 0.0779566911005096, 0.0941871215443894, 0.17172981316178804, 0.19572591271306175, 0.13987947543909, 0.09630597310210667, 0.11122352216759676, 0.09731273211737455, 0.05166530764818667, 0.08102217988571757, 0.11670671944261007, 0.07172764266616265, 0.11041861204925432, 0.08435993550932172, 0.08208064109211324, 0.12515109605545274, 0.07468842344320385, 0.04565031126711863, 0.08739910267581313, 0.10375487771977882, 0.13456674039893632, 0.10708492229924582, 0.0806407821215196, 0.09110463857002057, 0.08080433320160162, 0.07547320347396211, 0.07373548120546747, 0.08520967541297983, 0.06875657403877766, 0.09969852529851317, 0.08130794243524539, 0.10801181139324098, 0.132494949459835, 0.14188475931445418, 0.08914380252588343, 0.07701853712868306, 0.10856556732382551, 0.11406283600888667, 0.07715702869921096, 0.08729059173345954, 0.11267951454676021, 0.07969817478644227, 0.06370381134381944, 0.08327425592243617, 0.09239771369146647, 0.08562107871540138, 0.0903728920341338, 0.08314114769033137, 0.10952575838589612, 0.13454806062977565, 0.11502492300248418, 0.10631166178237801, 0.10531220141154289, 0.11063119440962696, 0.13733468191964285, 0.0894553781799178, 0.09429003518725199, 0.12717798349808673, 0.08025741888552296, 0.04977758290816327, 0.09647575810923327, 0.07588082726580216, 0.08113549195719955, 0.08282262270142432, 0.07460648794022817, 0.09836913232089711, 0.12830741622821004, 0.07716566297743055, 0.08613536462762188, 0.07245026672778486, 0.04442747639420352, 0.0424898579223356, 0.06871427298132794, 0.0668046753206491, 0.0494130272551729, 0.04974851301197562, 0.039002727067389456, 0.050333487236040246, 0.04275124063297194, 0.05118933022427721, 0.0554090324280754, 0.08812721996350624, 0.10038297968927154, 0.13752335667339852, 0.07139269216801304, 0.0798691882351899, 0.08786382489193593, 0.032467896338222786, 0.04044638428287982, 0.07842015549709468, 0.08615978699422477, 0.05971704046201814, 0.08561533679226899, 0.046296082234977325, 0.07337152390252977, 0.09597237169607427, 0.127667441162663, 0.14019103588701107, 0.13909328054138323, 0.10924932847487953, 0.06385183044571996, 0.05644322817017432, 0.07100714651094812, 0.06971766326973498, 0.05395796795280612, 0.06528449579701673, 0.07367114700697988, 0.048390280102926585, 0.04972401867648101, 0.04945985685941043, 0.06893141143176021, 0.0944724707917021, 0.05978024575715703, 0.04527832861660289, 0.04541487021240788, 0.043505350056689346, 0.039192954688385774, 0.037544775722789116, 0.041675524376417236, 0.04558115710476899, 0.04373017810639881, 0.04850621091535572, 0.051966738192672904, 0.057310937721442745, 0.04844646289505385, 0.039210470809417516, 0.06657826672335601, 0.056151175639526645, 0.0673734122555272, 0.054674221739477044, 0.04093483438297194, 0.05462801771099065, 0.04286438957093254, 0.042032448558850626, 0.049535388211274095, 0.04194199196605725, 0.04717647491939484, 0.05261949880863804, 0.07233035825007086, 0.05787304521417942, 0.05310023162910998, 0.04602921881643282, 0.05033946895815618, 0.04712314320259354, 0.037954004681299607, 0.04035614636479592, 0.05352207728794643, 0.04545260959201389, 0.04331675003985969, 0.04013671044589711, 0.04453027565192744, 0.04138312307344813, 0.054229703111713434, 0.04403050982762897, 0.03951925057132228, 0.036859316317672905, 0.042069061348497735, 0.05871427298132795, 0.048526849379074546, 0.05873192750407455, 0.05231766681281888, 0.05438217197686366, 0.06871632409474206, 0.058910903065653344, 0.06128370081756661, 0.0559954349578373, 0.04630787406108277, 0.05080324480052437, 0.07157377973976049, 0.04815686007475907, 0.06656758211096939, 0.04484800170068027, 0.040914630500637754, 0.048149596752763604, 0.06534560569019274, 0.03823173263446003, 0.028396497107957767, 0.03180584343112245, 0.023132401723710318, 0.03580008093732284, 0.03960358704028486, 0.037087681915214, 0.03581414531958617, 0.03629005899234694, 0.04906732745181406, 0.061725606420953795, 0.07408989523543792, 0.043964929559063205, 0.05716837841907596, 0.06340209407330641, 0.0519013821348852, 0.05749632405045352, 0.04647501073997307, 0.04188011532738095, 0.027155169359410432, 0.031728654026714855, 0.03967494973249717, 0.03475660397622591, 0.04818026380474064, 0.04132397848462301, 0.051527658752303, 0.05493711579683957, 0.04897143443966128, 0.054906913774624436, 0.05685920006023243, 0.06634526743640165, 0.07818633410395408, 0.0830853672849348, 0.07210549975198413, 0.0864622085813492, 0.07529438875159439, 0.06103498186383929, 0.03369256052030187, 0.03625758441397392, 0.050471736709006516, 0.03313556281887755, 0.03195732964409722, 0.048606383308531745, 0.07860967726934524, 0.05603626623175312, 0.06185519748263889, 0.06726849268353174, 0.07746123367966978, 0.08572617718962584, 0.07562872023809523, 0.06757722538885345, 0.08297414766687926, 0.08986261138570012, 0.07412752942974064, 0.0549900516847364, 0.053001490309665535, 0.04580379563934949, 0.03539438952664399, 0.0667594124238237, 0.08040644154797336, 0.1108582428739725, 0.13524420705782314, 0.1228293075042517, 0.12220027724631519, 0.09301387726314485, 0.09090991100216128, 0.1074199041595805, 0.10852100605867347, 0.0773401847718254, 0.06920807922778487, 0.1157072493711026, 0.0888025843475411, 0.12800038586398102, 0.130140380859375, 0.11078888147055697, 0.1594931341677296, 0.11418709752781321, 0.13222658741230867, 0.12760143461681547, 0.09119530364229025, 0.13011139954028486, 0.10433850069975907, 0.08190349968112245, 0.08541840776023951, 0.07242567274305556, 0.07788306549833475, 0.08688230484250992, 0.09622329954117063, 0.09666239835778061, 0.07820541416436366, 0.07073475255987811, 0.10229347419306264, 0.0908068764615221, 0.08110248868427579, 0.08505786852501417, 0.09879604901856576, 0.09323126483666383, 0.05221948186826814, 0.0966607126248937, 0.0817484177915958, 0.09742392334537982, 0.1196605448820153, 0.10533007148171769, 0.09770663376027494, 0.12257093364689625, 0.08591138082837302, 0.1076374716553288, 0.07147136247076956, 0.10068014201123157, 0.08803506656568877, 0.15409597937482283, 0.18696328091783587, 0.1845070380040037, 0.18484416797317885, 0.1335922414213081, 0.12207220029939059, 0.10999444455516581, 0.08976642772994614, 0.14576862499557114, 0.11399830374858276, 0.09354550316220238, 0.09677880250407454, 0.11972213364512471, 0.10295462748901645, 0.07084330379287132, 0.10444898678872591, 0.10477598298433957, 0.0918230772126559, 0.08894039923912274, 0.08196774575715703, 0.08220953078497024, 0.08234912552260487, 0.08222423735119047, 0.07526870969742064, 0.07565001472594246, 0.0899492010345805, 0.0923096533535289, 0.07734148574794501, 0.10524139196694303, 0.11160539069143283, 0.10097263742736678, 0.10615658714657739, 0.13263770970627833, 0.10626526570914824, 0.1074752150209042, 0.1348590710698342, 0.10118408203125, 0.07954933910413124, 0.10661119249131945, 0.11290852864583334, 0.12469130604715845, 0.13846875941131662, 0.1826856437562004, 0.1840035214932327, 0.1659833358799249, 0.1700253468900581, 0.12104234483506944, 0.14668018297813917, 0.0626521145567602, 0.10694527208669927, 0.045973390332695575, 0.10899353996155754, 0.11445618367789824, 0.032323703895620746, 0.010909432132227892, 0.0036434555918721657, 0.0557743022339144, 0.08578258696056548, 0.07899484647374574, 0.0811853940795068, 0.08072191441680839, 0.08802059805041808, 0.08596252579807964, 0.055135586623972506, 0.05196296259389172, 0.09051612490699405, 0.08545295559630102, 0.06395982807185374, 0.06263401161245748, 0.04230390968236253, 0.06635406148136339, 0.05535232370943169, 0.04975308303660006, 0.053171657986111114, 0.07182043650793651, 0.11608780149429564, 0.10735253020479026, 0.09748460696127409, 0.08013318120216836, 0.09802469474117773, 0.11540259121226616, 0.08242856257086167, 0.04052256612280329, 0.08060363077522675, 0.12344367271648243, 0.06886976177189626, 0.09111822495925453, 0.08216828707394416, 0.06895222704967403, 0.07159576346814768, 0.08217460372821003, 0.0872708814971301, 0.07338610037113803, 0.08581907242063493, 0.04570840087337018, 0.0189488804962089, 0.012967252493445295, 0.011118961256377551, 0.010500936702806123, 0.009152876319798752, 0.0070254786484906465, 0.006816843599418934, 0.00762944158783305, 0.010642366647179706, 0.0057050321756306685, 0.004948043996244331, 0.007382848484445862, 0.008334523588081066, 0.007342263565582483, 0.0077899045360331634, 0.008297121908659296, 0.003848733015341553, 0.004016298739547903, 0.0029670725712159863, 0.002749779110863095, 0.0035817228909793084, 0.0057815240353954085, 0.00252166263640873, 0.004879584972009637, 0.006442893238024376, 0.009346732833758503, 0.00656865057220805, 0.00785659478635204, 0.0047297152910643426, 0.005400681268601191, 0.011459983081774377, 0.004941915568310658, 0.0042446615690547055, 0.003955055980725624, 0.004398674997342687, 0.007551084072952098, 0.007949794501133787, 0.008003527582908163, 0.004270246510062358, 0.0028727185861323694, 0.002174816866850907, 0.006934651139101474, 0.0064104906285430835, 0.005212687451282596, 0.0041387399686437076, 0.005035162339675454, 0.006926540798611111, 0.008739860690369899, 0.009795112869366497, 0.013716321326707767, 0.011647426060267857, 0.012331756107390873, 0.01296825175382653, 0.015167521435657597, 0.016026287468112244, 0.02594220565830499, 0.021078232399730727, 0.01618252085990646, 0.024246826171875, 0.01748730579471372, 0.013699281307575114, 0.01114779033358135, 0.008957790798611111, 0.011938554067460317, 0.013919965609941893, 0.00994805506838152, 0.01766015569639314, 0.013066013189129819, 0.01177128729095805, 0.015494636656746032, 0.01353220829347364, 0.014447624915851758, 0.012962059661104025, 0.011411619986536281, 0.014434609618587018, 0.012800403690121882, 0.012864760487528345, 0.023371651232107427, 0.02229319462159864, 0.011696733055201247, 0.014157698235544218, 0.01531874468537415, 0.01125468628206491, 0.009839883056087018, 0.009119078621031746, 0.007843889508928571, 0.007794457952451814, 0.018999422034438777, 0.02096145456880669, 0.029605095618976757, 0.013593821968891723, 0.015980257825786565, 0.024281678491709185, 0.025012173814838435, 0.027303292410714285, 0.033138743290284864, 0.018654292446145124, 0.026656067863343253, 0.02962160140749008, 0.03163112233825822, 0.026807949905222506, 0.023031440440759637, 0.03550676064696712, 0.03484348703674178, 0.023984380536068595, 0.025175905811543366, 0.023684552597080497, 0.02207576829559949, 0.029729244725233844, 0.02948960492400085, 0.022468920510912697, 0.018672857652175454, 0.019611838550524376, 0.026414064160820577, 0.042500733529088716, 0.024346110026041666, 0.032999704927543935, 0.03747979611766582, 0.03292728207819586, 0.031254221252303004, 0.028741432933850623, 0.03151002360579649, 0.025484621908659296, 0.022360546432114513, 0.037801624393246885, 0.03712488983223498, 0.03301108985260771, 0.022198475255987813, 0.032452868680024095, 0.03675173389668367, 0.05005419811153628, 0.06728462478741497, 0.05134213402157738, 0.05095810247927296, 0.04941830312854308, 0.049036469405470524, 0.05272941745057398, 0.05222721298805981, 0.04577014187836593, 0.06693615694975907, 0.11161634103511196, 0.10749451929209183, 0.11428093389048327, 0.08877221347523384, 0.11329716342917376, 0.119393692535608, 0.11593272237280329, 0.10368522246138039, 0.08472669259761197, 0.08794982494951105, 0.06687055730495323, 0.09283380832801871, 0.0757673572358631, 0.06064203448306406, 0.058732807738981006, 0.0631679072996386, 0.06643382515766723, 0.07186788338382227, 0.07139353641847364, 0.09158942743764173, 0.07139290253861962, 0.06040707542782738, 0.05707756198182398, 0.059487667299992913, 0.06357019956420068, 0.049432874061082765, 0.05003061722735969, 0.047373794244260206, 0.0421744514863237, 0.04965422822774943, 0.04280704420440051, 0.03357597091571003, 0.033625596234587586, 0.036183154739760484, 0.046008378286210315, 0.02750100479644983, 0.02766834630987812, 0.02583473672672194, 0.027676896767821712, 0.036353460817920916, 0.030833421910430838, 0.02778909350198413, 0.02986689630279195, 0.02908473285147392, 0.02749817032932965, 0.02882452101934524, 0.024296094414328232, 0.028034656896612813, 0.03296431837709042, 0.030047062119118482, 0.02594705802242772, 0.026059174483595522, 0.02318424147002551, 0.021574457908163265, 0.021347033442283163, 0.02636727330906321, 0.032256105730052435, 0.03440981079931973, 0.04138457905948838, 0.054261026187818875, 0.03663002066060799, 0.02821351896878543, 0.03929528614831349, 0.031476126257794786, 0.03588054492630385, 0.036230922707624715, 0.03779293830162273, 0.04166263640873016, 0.051171600964604595, 0.053242763251133786, 0.05984154941273384, 0.06385376253365929, 0.060100521165497446, 0.049147091128117916, 0.04916093406763747, 0.057569151032808956, 0.06200765250761763, 0.06201197617718963, 0.053075347000779476, 0.06607156143707484, 0.07283784689005811, 0.055068519920989226, 0.04689089682096797, 0.045158660957872736, 0.06764580343856293, 0.06469401595273526, 0.07458103309683248, 0.09021051731239371, 0.06544074579701673, 0.06463495717297335, 0.10784963871616354, 0.11757055996226616, 0.11112818434665533, 0.08290645262011054, 0.09146615026218821, 0.09385598526519982, 0.08098878060338718, 0.08811029620181406, 0.08513097507883362, 0.06596724806459042, 0.08112608340862387, 0.1457775076176304, 0.12184582491850907, 0.1055987119782809, 0.0951730575042517, 0.10800503616160005, 0.11733367989122732, 0.1324676029265873, 0.10631953578957624, 0.11442713038991638, 0.10745524918951956, 0.08537471987492914, 0.06509505706579506, 0.052949323935303286, 0.11174408581792092, 0.11159079484658446, 0.0874170779965632, 0.07724681067088293, 0.04261224932681406, 0.09272353537769275, 0.1164864427216199, 0.09468095636692177, 0.08705285450768849, 0.09116468641493056, 0.08687710370606576, 0.07219531416082058, 0.06815070673451672, 0.09139205828815901, 0.09220472270939625, 0.15218142139668367, 0.1395458929014314, 0.10553959783783305, 0.07198102401767999, 0.061915864490327384, 0.08948939732142858, 0.08417897888321996, 0.11428574473409156, 0.07828741718041383, 0.08183850900386196, 0.12732936452575822, 0.10347358963116497, 0.1291581909456491, 0.10655224996899802, 0.0909546839569161, 0.13791580027193168, 0.1032152462221868, 0.09125636647888322, 0.08930981832837302, 0.07637544177827381, 0.07163922160661139, 0.08039554656498016, 0.11317385580534298, 0.1151539054749504, 0.1342214903539541, 0.12622699763499148, 0.09780349558443169, 0.13877744506005527, 0.12210858334219105, 0.10631715804811508, 0.10140637456154336, 0.08917269821339995, 0.08912622845362103, 0.08558133149092971, 0.08081275853440334, 0.09981800174496883, 0.0818128410218254, 0.0908256658783305, 0.08793912096088435, 0.08773648701016865, 0.09525007252249858, 0.08709456324847648, 0.10283549682893992, 0.08017330662733843, 0.07216061131483843, 0.08841304718501984, 0.0875129599365788, 0.15678666095344387, 0.12782847432592828, 0.10716190675488946, 0.11414757830215419, 0.09246466604219813, 0.09540511842757937, 0.08581725105406746, 0.10337020631820437, 0.10491871390483276, 0.08779760797548186, 0.11116848138995182, 0.1007043401670564, 0.09797825819781038, 0.10653641958085318, 0.11232315305679563, 0.10724681343891723, 0.0812385514101474, 0.0691648508361678, 0.0868651430298682, 0.10214878627232143, 0.13409138997395834, 0.11249823953018707, 0.09941478218891724, 0.13242123558407737, 0.09906176923894558, 0.11989365765837585, 0.11732345200449971, 0.11091503740167942, 0.10943027764491213, 0.08568905784970238, 0.1083670839755173, 0.1372038369384212, 0.12286704411582342, 0.11147046839569161, 0.0985848258574263, 0.10404281650811366, 0.08732101890235261, 0.0896630776333971, 0.10501636738679847, 0.09680268233595521, 0.11487009615043935, 0.1053948490203373, 0.10601157813385771, 0.09476141758786848, 0.09716936660732, 0.11442886041135204, 0.10828149081898385, 0.08711057355885063, 0.11375068924053996, 0.09516978015164398, 0.09031331933815193, 0.12666208280187075, 0.10849084555697279, 0.11815578330941752, 0.11860566361961451, 0.1344905958802792, 0.12129823022959184, 0.09600776931866496, 0.09774479388109411, 0.060117079546662414, 0.0783476468386834, 0.08743509789983701, 0.06517379933744331, 0.04943355222948555, 0.06804904237085459, 0.07294675796750992, 0.10166822230194161, 0.11197394338594813, 0.14409121005172904, 0.07696829659598214, 0.08621962635965845, 0.09386440562553146, 0.09280494603440334, 0.07847637980973639, 0.06294936268778345, 0.0715253225313563, 0.04367363823784722, 0.09473344660129678, 0.06186043460352891, 0.05447420634920635, 0.06833903825201956, 0.09719835069444445, 0.07131345995429422, 0.05400170012666525, 0.06563877097062784, 0.1297878938359198, 0.11030016563917233, 0.06629129076760913, 0.1013918755978954, 0.08777755910306831, 0.09168102169253117, 0.11716531143707483, 0.16560042539151076, 0.15628017987794077, 0.0491610946136267, 0.02555934222647392, 0.06809430526767998, 0.06497771455587444, 0.06631344057805413, 0.07003017434187217, 0.09118237969015731, 0.0798740876558957, 0.06424243053341128, 0.0695542523650085, 0.08490868808460884, 0.1258446462895054, 0.14431219606983417, 0.08537300369366496, 0.11547027795493198, 0.08266411952150651, 0.09174706975889314, 0.07332142524978741, 0.0704504422211593, 0.04256070299213435, 0.0367247621704932, 0.08168368730955924, 0.054172880903663546, 0.08799737977873441, 0.08641646404655612, 0.09627108965330924, 0.07807022060126134, 0.06293834314324688, 0.08826515664859694, 0.07778177205126842, 0.0854858315396471, 0.06974062965029762, 0.04767562900811366, 0.07077949506625567, 0.06755881796077806, 0.07522778984640731, 0.07140509019362953, 0.05559320082199547, 0.08002461059293509, 0.10930743505084325, 0.10378189605920493, 0.16316991412450396, 0.13566037547831633, 0.10759778634761197, 0.10784006408553004, 0.07846289117860686, 0.07547890038176729, 0.08512476637790532, 0.058734424271010485, 0.1549146338222789, 0.1282102526883149, 0.0885732803863733, 0.08582966015182114, 0.05412497176605017, 0.09730306543190193, 0.0944865490141369, 0.0951955062624008, 0.08058805504623724, 0.07405324646134495, 0.09642946273561508, 0.08380590322066327, 0.10049571342208759, 0.1260496219972364, 0.08921488582412132, 0.17567215900031888, 0.10759669851013322, 0.09148373281604308, 0.08502610533145549, 0.07300650598781179, 0.0966397724454365, 0.09467526252037273, 0.0874089178314555, 0.09007228998370181, 0.10324295424550028, 0.13745430252178997, 0.12259600096549036, 0.1041072009858631, 0.078930486908305, 0.08054193129074547, 0.11271536690848215, 0.07020870701796343, 0.09988949176675879, 0.07846171476403062, 0.0881394657472364, 0.09096599414505385, 0.08267100085476899, 0.09907173969848355, 0.07965944874043368, 0.08845351861447705, 0.0815864462647038, 0.08496157691592261, 0.10928096433886055, 0.0757885714507157, 0.10490698574351616, 0.12410933790834042, 0.12109395206650368, 0.12621369169412558, 0.08150582172973356, 0.08910210503472223, 0.1321933294802296, 0.10954056443540958, 0.09063113396400227, 0.09383021209785998, 0.09686934767396542, 0.13114447422849349, 0.15284084190316752, 0.13482277660413122, 0.14580212928270267, 0.16107134276236537, 0.1451322262303359, 0.14737282820029055, 0.1577893038725907, 0.13689760100003542, 0.1746347163539895, 0.16125050931831067, 0.21092015549709467, 0.1942496467988237, 0.1941363040984623, 0.1489647745491426, 0.1664857756253543, 0.1491300317327452, 0.14367021971549035, 0.09825433086646117, 0.06811836778982426, 0.11224622938368056, 0.09376024172689909, 0.10304231051144416, 0.08849506127320719, 0.08915765117896117, 0.08149499317956349, 0.06625285384336026, 0.0541960272064555, 0.10535601073111536, 0.10631537820206208, 0.07124232147285997, 0.05741619776165675, 0.05307826727696287, 0.05968370779301304, 0.07105650056246457, 0.09966549689537273, 0.08828883441397392, 0.07053848785607993, 0.05402884900705074, 0.05965459360827664, 0.05381191262312217, 0.08033342910732001, 0.08635038829985119, 0.09095584376328657, 0.08730627358365221, 0.0710837020355017, 0.05454635239512472, 0.0644078731753118, 0.09277316900067319, 0.11461176934966695, 0.11538015352625425, 0.1230110981567106, 0.1128893074156746, 0.07181440772923753, 0.11680678456278344, 0.08312408378064767, 0.04443505250407455, 0.037248770439165246, 0.04296205966110402, 0.05939526477908872, 0.1583745936525652, 0.15342006138392858, 0.14710371436986253, 0.12517846901130245, 0.12280533632723922, 0.11161163814484126, 0.10891735258556548, 0.09560374426463293, 0.07726584644274376, 0.0626997275147038, 0.10064401639562075, 0.12449493062198838, 0.12112513674089427, 0.11298573465844672, 0.10213293097186792, 0.0907738261320153, 0.06541797871492347, 0.06558228369472789, 0.10465959544625142, 0.1442071214879181, 0.1219095506040958, 0.11698055068381519, 0.10897844310250142, 0.11522763760452097, 0.1493371415949192, 0.1706734544403699, 0.15924318343874008, 0.10371445567159156, 0.105251287689555, 0.07794297960069445, 0.057745350255987815, 0.06479675984977325, 0.045449827717545355, 0.05894945901537699, 0.05630347288655045, 0.07720039627178997, 0.081340611602714, 0.0760724305998441, 0.08628811029620181, 0.09397009747909581, 0.07677203466021826, 0.04946060699670493, 0.10941659248334751, 0.14958313680289825, 0.1663395818939555, 0.11954904846053005, 0.11876871191184807, 0.10074390091322988, 0.0762830475614725, 0.055145856031214566, 0.12463094629127693, 0.14671879982461736, 0.14037290404443029, 0.12157468488697562, 0.1447003464471726, 0.09530476611217403, 0.0681390865265377, 0.07868535532702664, 0.17304470209307682, 0.13099255343413407, 0.11329724647020266, 0.07746368062198838, 0.07098676824245323, 0.07352364399535856, 0.08343010381235828, 0.09560851635576105, 0.12070215618799603, 0.14964596564537272, 0.15889050265288407, 0.1478450852997449, 0.08324361303766298, 0.10615353954081633, 0.06586537056228742, 0.05675933215082908, 0.03963731000212585, 0.0210329003020479, 0.005989591637436224, 0.00000938086823270975, 0, 0]
    
    // creates a circular barrier in the center of the gameView
    // the barrier is currently sized to be the same as the size of a drop
    
    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()
        //        let barrierSize = dropSize
        //        let barrierOrigin = CGPoint(x: gameView.bounds.midX-barrierSize.width/2, y: gameView.bounds.midY-barrierSize.height/2)
        //        let path = UIBezierPath(ovalInRect: CGRect(origin: barrierOrigin, size: barrierSize))
        //        dropitBehavior.addBarrier(path, named: PathNames.MiddleBarrier)
        //        gameView.setPath(path, named: PathNames.MiddleBarrier)
    }
    
    // MARK: - UIDynamicAnimatorDelegate
    
 
    
    // MARK: - Gestures
    

    
    // MARK: - Dropping
    
    var dropsPerRow = 10
    
    var dropSize: CGSize {
        let size = (gameView.bounds.size.width / CGFloat(dropsPerRow))
        return CGSize(width: size, height: size)
    }
    
    
    // removes a single, completed row
    // allows for a little "wiggle room" for mostly complete rows
    // in the end, does nothing more than call removeDrop() in DropitBehavior

    
    // MARK: - Constants
    
}

// MARK: - Extensions

private extension CGFloat {
    static func random(max: Int) -> CGFloat {
        return CGFloat(arc4random() % UInt32(max))
    }
}

private extension UIColor {
    class var random: UIColor {
        switch arc4random()%5 {
        case 0: return UIColor.greenColor()
        case 1: return UIColor.blueColor()
        case 2: return UIColor.orangeColor()
        case 3: return UIColor.redColor()
        case 4: return UIColor.purpleColor()
        default: return UIColor.blackColor()
        }
    }
}

extension UIView {
    
    // MARK: - Frame
    
    /**
    Redefines the height of the view
    
    :param: height The new value for the view's height
    */
    func setHeight(height: CGFloat) {
        
        var frame: CGRect = self.frame
        frame.size.height = height
        
        self.frame = frame
    }
    
    /**
     Redefines the width of the view
     
     :param: width The new value for the view's width
     */
    func setWidth(width: CGFloat) {
        
        var frame: CGRect = self.frame
        frame.size.width = width
        
        self.frame = frame
    }
    
    /**
     Redefines X position of the view
     
     :param: x The new x-coordinate of the view's origin point
     */
    func setX(x: CGFloat) {
        
        var frame: CGRect = self.frame
        frame.origin.x = x
        
        self.frame = frame
    }
    
    /**
     Redefines Y position of the view
     
     :param: y The new y-coordinate of the view's origin point
     */
    func setY(y: CGFloat) {
        
        var frame: CGRect = self.frame
        frame.origin.y = y
        
        self.frame = frame
    }
}
